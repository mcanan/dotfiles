set encoding=utf-8
call pathogen#infect()      "Executes the pathogen plugin, which loads other plugins
let mapleader=","           "Changes Leader key into a comma instead of a backslash

set nocompatible            "Prefents VIM from being nerfed into acting like VI
set viminfo='1000,f1,:1000,/1000
set history=500

vnoremap < <gv  " better indentation
vnoremap > >gv  " better indentation

"------  Visual Options  ------
set guioptions=egmt         "remove toolbar, scrollbars
syntax on                   "Enables syntax highlighting
set nu                      "Enable Line Numbers
set nowrap                  "Disable word wrap
set vb                      "Visual bell instead of beeps
set ruler                   "Displays cursor position on bottom right of screen
set statusline=%<%f\ %h%m%r%=\ \ %-14.(%l,%c%V%)\ %P
let g:buftabs_only_basename=1
let g:buftabs_marker_modified = "+"

"------  Behavior  ------
set bs=2					" Backspace
set tabstop=8					" Columnas por tab
set softtabstop=8				" 
set shiftwidth=8				" Columnas en el indentado
set noexpandtab					" No usar espacios en vez de tab

set hidden                  "Switch between unsaved buffers w/o needing to save, preserves history
filetype indent on          "Syntax Highlight
filetype plugin on          "Needed for snipMate
set autoindent              "Autoindent

"Ignore these files when completing names
" set wildignore=.svn,CVS,.git,*.o,*.a,*.class,*.mo,*.la,*.so,*.obj,*.swp,*.jpg,*.png,*.xpm,*.gif,node_modules/*

"------  Searching  ------
set incsearch               "Search while typing
set ignorecase              "Case Insensitive Searching
set smartcase               "Lowercase = case insensitive, any uppercase = case sensitive
set hlsearch                "Highlight all search results
" http://www.vim.org/scripts/script.php?script_id=2572
noremap <leader>a :Ack 
noremap <leader>A <C-w>j<C-w>c<C-w>l
let g:ackprg="ack -H --nocolor --nogroup --column --type-add php=.tpl"

"------  Replacing ------
"type S, then type what you're looking for, a /, and what to replace it with
nmap S :%s//g<LEFT><LEFT>
vmap S :s//g<LEFT><LEFT>

"------  NERDTree Options  ------
let NERDTreeIgnore=['CVS','\.dSYM$']
let NERDTreeChDirMode=2     "setting root dir in NT also sets VIM's cd
nmap <silent> <Leader>d :NERDTreeToggle<CR>
" These prevent accidentally loading files while in the NERDTree panel
autocmd FileType nerdtree noremap <buffer> <c-left> <nop>
autocmd FileType nerdtree noremap <buffer> <c-h> <nop>
autocmd FileType nerdtree noremap <buffer> <c-right> <nop>
autocmd FileType nerdtree noremap <buffer> <c-l> <nop>
"autocmd vimenter * if !argc() | NERDTree | endif " Open NERDTree if we're simply launching vim
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif " close if only nerdtree open

"------  Tagbar Options  ------
" http://adamyoung.net/Exuberant-Ctags-OS-X
" http://www.vim.org/scripts/script.php?script_id=273
let g:tagbar_width=26
noremap <silent> <Leader>y :TagbarToggle<CR>

"------  Buffers  ------
" Ctrl Left & Right move between buffers
noremap <silent> <C-left> :bprev<CR>
noremap <silent> <C-h> :bprev<CR>
noremap <silent> <C-right> :bnext<CR>
noremap <silent> <C-l> :bnext<CR>
" Closes the current buffer
nnoremap <silent> <Leader>q :Bclose<CR>

" Allow saving of files as sudo when I forgot to start vim using sudo.
cmap w!! %!sudo tee > /dev/null %

" Closes the current window
nnoremap <silent> <Leader>Q <C-w>c

" CtrlP will load from the CWD, makes it easier with all these nested repos
let g:ctrlp_working_path_mode = ''

"------  Moving Between Windows  ------
nnoremap <Leader>h <C-w>h
nnoremap <Leader>l <C-w>l
nnoremap <Leader>j <C-w>j
nnoremap <Leader>k <C-w>k
nnoremap <Leader>wo <C-w>o
nnoremap <Leader>wv <C-w>v<C-w>l
"nnoremap <Leader>ws <C-w>s
"nnoremap <Leader>ww <C-w><C-w>

" Opens an edit command with the path of the currently edited file filled in Normal mode: <Leader>ee
map <Leader>ee :e <C-R>=expand("%:p:h") . "/" <CR>

" Opens a tab edit command with the path of the currently edited file filled in
" Normal mode: <Leader>t
map <Leader>et :tabe <C-R>=expand("%:p:h") . "/" <CR>

" Edit and Reload .vimrc files
nmap <silent> <Leader>ev :e $MYVIMRC<CR>
nmap <silent> <Leader>es :so $MYVIMRC<CR>

" When pressing <leader>cd switch to the directory of the open buffer
"map <Leader>cd :cd %:p:h<CR>
" ,ct = Builds ctags
map <Leader>ct :! /usr/local/bin/ctags -R *<CR>

" F2 = Paste Toggle (in insert mode, pasting indented text behavior changes)
set pastetoggle=<F2>
" ,T = Delete all Trailing space in file
map <Leader>T :%s/\s\+$//<CR>
" ,U = Deletes Unwanted empty lines
map <Leader>U :g/^$/d<CR>
" ,R = Converts tabs to spaces in document
map <Leader>R :retab<CR>
" ,p = Runs PHP lint checker on current file
map <Leader>p :! php -l %<CR>
" ,P = Runs PHP and executes the current file
map <Leader>P :! php -q %<CR>
" ,L = Toggle line numbers
map <Leader>L :set invnumber<CR>
" ,v = Paste
map <Leader>v "+gP
" ,c = Copy
map <Leader>c "+y

" Deletes trailing space in file upon write
" autocmd BufWritePre * :%s/\s\+$//e

" Accidentally pressing Shift K will no longer open stupid man entry
noremap K <nop>

map <Leader>? :Helptags<CR>

if has("gui_running")
    set cursorline                  "Highlight background of current line
    "autocmd VimEnter * TagbarOpen
     "colorscheme seoul256-light
    colorscheme solarized
	set background=dark

    " Show tabs and newline characters with ,s
    nmap <Leader>s :set list!<CR>
	set listchars=tab:▸\ ,trail:·,extends:❯,precedes:❮,nbsp:×,eol:¬
    "Invisible character colors
    highlight NonText guifg=#4a4a59
    highlight SpecialKey guifg=#4a4a59

	" Ctrl + Shift + C and Ctrl + Shift + V for copying and pasting OS Buffer
	" Vim can't do Ctrl + Shift :'(
	" which means C-V overwrites visual select (C-v)
	"map <C-C> "+y
	"map <C-V> "+gp
else
    set t_Co=256
    "colorscheme hybrid
    "colorscheme seoul256-light
    colorscheme solarized               "This theme works great in 256 colors
    set background=dark
    set mouse=a			        "This allows mouse scrolling in terminal, and selection of text
    set t_ut=
endif

if filereadable($HOME.'/.vimrc_local')
    source $HOME/.vimrc_local
endif

" Agregados por mi
"
"au BufRead *.php set ft=php.html
"au BufNewFile *.php set ft=php.html
let localvimrc_ask=0
let g:fuf_enumeratingLimit = 60
nmap <silent> <Leader>b :FufBuffer<CR>
nmap <silent> <Leader>o :FufCoverageFile<CR>
nmap <silent> <Leader>t :FufBufferTag<CR>
let g:fuf_buffertag__php='--language-force=php --php-types=cdf'
nmap <silent> <Leader>m :Goyo<CR>

"au FileType php.html set omnifunc=phpcomplete#CompletePHP

" Marcas en columna 81
highlight ColorColumn ctermbg=red ctermfg=blue
call matchadd('ColorColumn', '\%81v', 100)

"====[ Use persistent undo ]=================
" Actually switch on persistent undo
set undofile
" Save all undo files in a single location (less messy, more risky)...
set undodir=$HOME/tmp/.vim_undo_files
" Save a lot of back-history...
set undolevels=5000

" Remove search highlight
nmap <DEL> :nohlsearch<CR>

map <S-F6> :exe  "write ".g:FtpSync_Proto."://".g:FtpUpdateServer."/".g:FtpUpdatePath.expand("%")<CR>
map <Leader>7 :exe  "write ".g:FtpSync_Proto."://".g:FtpUpdateServer."/".g:FtpUpdatePath.expand("%")<CR>

set nofoldenable    " disable folding

"
autocmd Filetype java set makeprg=javac\ %
set errorformat=%A%f:%l:\ %m,%-Z%p^,%-C%.%#
map <F9> :make<Return>:copen<Return>
map <F10> :cprevious<Return>
map <F11> :cnext<Return>

if has("autocmd")
	  autocmd FileType make setlocal ts=8 sts=8 sw=8 noexpandtab
	  autocmd FileType html setlocal ts=2 sts=2 sw=2 expandtab
	  autocmd FileType css setlocal ts=2 sts=2 sw=2 expandtab
	  autocmd FileType javascript setlocal ts=4 sts=4 sw=4 noexpandtab
	  autocmd BufNewFile,BufRead *.rss setfiletype xml
endif

set clipboard^=unnamed
nmap <silent> <Leader>s :setlocal spell spelllang=es_es<cr>

if &term =~ '^screen'
	execute "set <xUp>=\e[1;*A"
	execute "set <xDown>=\e[1;*B"
	execute "set <xRight>=\e[1;*C"
	execute "set <xLeft>=\e[1;*D"
endif

"let g:vimwiki_list = [{'path': '~/proyectos/personales/wiki/', 'path_html': '~/proyectos/personales/wiki_html/'}]
let g:vimwiki_ext2syntax = {'.md': 'markdown'}
